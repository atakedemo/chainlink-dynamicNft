contractAddress = "0x45585c78a16c62b510E6336fD8B95C61e88039B0" # Oracle Address
name = "TimeAdapter" 
observationSource = """
  decode_log [
    type="ethabidecodelog"
    abi="OracleRequest(bytes32 indexed specId, address requester, bytes32 requestId, uint256 payment, address callbackAddr, bytes4 callbackFunctionId, uint256 cancelExpiration, uint256 dataVersion, bytes data)"
    data="$(jobRun.logData)"
    topics="$(jobRun.logTopics)"
  ]
  decode_cbor [type=cborparse data="$(decode_log.data)"]

  fetch [
    type="bridge"
    name="time-adapter"
    requestData="{\\"id\\": $(jobSpec.externalJobID), \\"params\\": $(decode_cbor.params)}"
  ]

  decode_log -> decode_cbor -> fetch

  data_now [type="jsonparse" path="data,now" data="$(fetch)"]
  data_timestamp [type="jsonparse" path="data,timestamp" data="$(fetch)"]

  fetch -> data_now
  fetch -> data_timestamp

  encode_data [
    type="ethabiencode"
    abi="(bytes32 requestId, string now, uint256 timestamp)"
    data="{\\"requestId\\": $(decode_log.requestId), \\"now\\": $(data_now), \\"timestamp\\": $(data_timestamp)}"
  ]
  
  data_now -> encode_data
  data_timestamp -> encode_data
  
  encode_tx [
    type="ethabiencode"
    abi="fulfillOracleRequest2(bytes32 requestId, uint256 payment, address callbackAddress, bytes4 callbackFunctionId, uint256 expiration, bytes calldata data)"
    data="{\\"requestId\\": $(decode_log.requestId), \\"payment\\": $(decode_log.payment), \\"callbackAddress\\": $(decode_log.callbackAddr), \\"callbackFunctionId\\": $(decode_log.callbackFunctionId), \\"expiration\\": $(decode_log.cancelExpiration), \\"data\\": $(encode_data)}"
  ]
  submit_tx [
    type="ethtx" to="0x45585c78a16c62b510E6336fD8B95C61e88039B0"
    data="$(encode_tx)"
  ]

  encode_data -> encode_tx -> submit_tx
""" 
schemaVersion = 1 
type = "directrequest"